q()
q()
q()
q()
q()
library(httr)
library(jsonlite)
url <- "https://fantasy.premierleague.com/api/bootstrap-static/"
response <- GET(url)
data <- fromJSON(content(response, "text"))
#|label: fpl-api
library(httr)
library(jsonlite)
url <- "https://fantasy.premierleague.com/api/bootstrap-static/"
response <- GET(url)
data <- fromJSON(content(response, "text"))
data
str(data)
str(data)
#|label: fpl-api
library(httr)
library(jsonlite)
url <- "https://fantasy.premierleague.com/api/bootstrap-static/"
response <- GET(url)
fpl_data <- fromJSON(content(response, "text"))
#| label: split-fpl-data
fpl_chips <- fpl_data$chips
fpl_chips
class(fpl_chips)
fpl_chips$overrides
fpl_chips$overrides$element_types
View(fpl_data)
fpl_events <- fpl_data$events
fpl_events
library(tidyverse)
#| label: split-fpl-data
# Chips - gives chips with names, quantity, start and end, and chip types
# Data structure is almost normal, but lots associated with the assistant manager chip is not.
# Add assistant manager to the list of things to work out later.
fpl_chips <- tibble(fpl_data$chips)
fpl_events <- fpl_data$events
fpl_chips
#| label: set-up
#| include: false
#Set up libraries required
library(httr)
library(jsonlite)
library(tidyverse)
fpl_events <- tibble(fpl_data$events)
fpl_events
fpl_events <- tibble(fpl_data$events)
fpl_events |> filter(!is.na(release_time))
fpl_events |> filter(id>15)
fpl_events |> filter(id>25)
View(fpl_events)
View(fpl_events)
fpl_data$game_settings
fpl_settings <- fpl_data$game_settings
fpl_game_settings <- fpl_data$game_settings
fpl_game_config <- fpl_data$game_config
fpl_game_settings <- fpl_data$game_settings
fpl_game_config <- fpl_data$game_config
fpl_phases <- tibble(fpl_data$phases)
fpl_phases
total_players_3_45<- 11299220
fpl_teams <- tibble(fpl_data$teams)
fpl_teams
fpl_total_players <- fpl_data$total_players
pl_total_players
fpl_total_players
total_players_3_45
#|label: fpl-api
url <- "https://fantasy.premierleague.com/api/bootstrap-static/"
response <- GET(url)
fpl_data <- fromJSON(content(response, "text"))
#| label: split-fpl-data
# Chips - gives chips with names, quantity, start and end, and chip types
# Data structure is almost normal, but lots associated with the assistant manager chip is not.
# Add assistant manager to the list of things to work out later.
fpl_chips <- tibble(fpl_data$chips)
# Events - gives details of each game week.
# Key columns appear to be the deadline, whether the week has passed, is current, or is next,
# and details of which players have been most chosen or transferred in.
fpl_events <- tibble(fpl_data$events)
# Game_settings - a list containing the parameters for the game.
# Can capture as might be helpful to reference these if things change in different seasons (e.g. squad value)
fpl_game_settings <- fpl_data$game_settings
# Game_config - a further list with some additional rules (broken into other lists).
# Contains useful parameters like the number of points for different events
fpl_game_config <- fpl_data$game_config
# Phases - the different phases that scores get summarised on, with their start and end weeks
# Whole season plus months.
fpl_phases <- tibble(fpl_data$phases)
# Teams - lists teams with a unique code, whether they have played this week, and some indications of their overall strength.
fpl_teams <- tibble(fpl_data$teams)
# Total_players - how many players are currently in the game
fpl_total_players <- fpl_data$total_players
fpl_total_players
fpl_element_stats <- fpl_data$element_stats
fpl_element_stats
fpl_element_types <-fpl_data$element_types
fpl_element_types
fpl_element_stats <- tibble(fpl_data$element_stats)
fpl_element_types <- tibble(fpl_data$element_types)
fpl_element_types
fpl_elements <- tibble(fpl_data$elements)
fpl_elements <- tibble(fpl_data$elements)
fpl_elements
fpl_elements <- tibble(fpl_data$elements)
fpl_elements |> relocate(web_name)
#| label: split-fpl-data
# Chips - gives chips with names, quantity, start and end, and chip types
# Data structure is almost normal, but lots associated with the assistant manager chip is not.
# Add assistant manager to the list of things to work out later.
fpl_chips <- tibble(fpl_data$chips)
# Events - gives details of each game week.
# Key columns appear to be the deadline, whether the week has passed, is current, or is next,
# and details of which players have been most chosen or transferred in.
fpl_events <- tibble(fpl_data$events)
# Game_settings - a list containing the parameters for the game.
# Can capture as might be helpful to reference these if things change in different seasons (e.g. squad value)
fpl_game_settings <- fpl_data$game_settings
# Game_config - a further list with some additional rules (broken into other lists).
# Contains useful parameters like the number of points for different events
fpl_game_config <- fpl_data$game_config
# Phases - the different phases that scores get summarised on, with their start and end weeks
# Whole season plus months.
fpl_phases <- tibble(fpl_data$phases)
# Teams - lists teams with a unique code, whether they have played this week, and some indications of their overall strength.
fpl_teams <- tibble(fpl_data$teams)
# Total_players - how many players are currently in the game - updates in real time.
fpl_total_players <- fpl_data$total_players
# Element_stats - a list of the different stats that players have associated with them.
# Each has a display name and a data column name
fpl_element_stats <- tibble(fpl_data$element_stats)
# Element_types - a list of the 4 different player types, plus managers, and their attributes.
fpl_element_types <- tibble(fpl_data$element_types)
# Elements - the big table of players - have as a tibble. Over 100 variables about each player. This will be the key source of data.
fpl_elements <- tibble(fpl_data$elements)
q()
#| label: set-up
#| include: false
#Set up libraries required
library(httr)
library(jsonlite)
library(tidyverse)
#| label: fpl-api
url <- "https://fantasy.premierleague.com/api/bootstrap-static/"
response <- GET(url)
fpl_data <- fromJSON(content(response, "text"))
#| label: split-fpl-data
# Chips - gives chips with names, quantity, start and end, and chip types
# Data structure is almost normal, but lots associated with the assistant manager chip is not.
# Add assistant manager to the list of things to work out later.
fpl_chips <- tibble(fpl_data$chips)
# Events - gives details of each game week.
# Key columns appear to be the deadline, whether the week has passed, is current, or is next,
# and details of which players have been most chosen or transferred in.
fpl_events <- tibble(fpl_data$events)
# Game_settings - a list containing the parameters for the game.
# Can capture as might be helpful to reference these if things change in different seasons (e.g. squad value)
fpl_game_settings <- fpl_data$game_settings
# Game_config - a further list with some additional rules (broken into other lists).
# Contains useful parameters like the number of points for different events
fpl_game_config <- fpl_data$game_config
# Phases - the different phases that scores get summarised on, with their start and end weeks
# Whole season plus months.
fpl_phases <- tibble(fpl_data$phases)
# Teams - lists teams with a unique code, whether they have played this week, and some indications of their overall strength.
fpl_teams <- tibble(fpl_data$teams)
# Total_players - how many players are currently in the game - updates in real time.
fpl_total_players <- fpl_data$total_players
# Element_stats - a list of the different stats that players have associated with them.
# Each has a display name and a data column name
fpl_element_stats <- tibble(fpl_data$element_stats)
# Element_types - a list of the 4 different player types, plus managers, and their attributes.
fpl_element_types <- tibble(fpl_data$element_types)
# Elements - the big table of players - have as a tibble. Over 100 variables about each player. This will be the key source of data.
fpl_elements <- tibble(fpl_data$elements)
#| label: openfootball-api
url2 <- "https://github.com/openfootball/football.json/blob/master/2024-25/en.1.json"
response2 <-GET(url2)
open_football_data <- fromJSON(content(response2))
open_football_data <- fromJSON(content(response2),"text")
open_football_data <- fromJSON(content(response2,"text")
open_football_data <- fromJSON(content(response2,"text"))
open_football_data <- fromJSON(content(response2,"text"))
open_football_data <- fromJSON(content(response2,"text"))
open_football_data <- fromJSON(content(response2,"html"))
open_football_data <- fromJSON(content(response2,"raw"))
#| label: openfootball-api
url2 <- "https://raw.githubusercontent.com/openfootball/football.json/refs/heads/master/2024-25/en.1.json"
response2 <-GET(url2)
open_football_data <- fromJSON(content(response2,"text"))
open_football_data
View(open_football_data)
View(fpl_element_types)
View(fpl_elements)
q()
